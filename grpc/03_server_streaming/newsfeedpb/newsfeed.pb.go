// Code generated by protoc-gen-go. DO NOT EDIT.
// source: newsfeedpb/newsfeed.proto

package newsfeedpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type User struct {
	UserId               int64    `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_d722b1f49019b149, []int{0}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUserId() int64 {
	if m != nil {
		return m.UserId
	}
	return 0
}

type NewsfeedServerRequest struct {
	User                 *User    `protobuf:"bytes,1,opt,name=user,proto3" json:"user,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewsfeedServerRequest) Reset()         { *m = NewsfeedServerRequest{} }
func (m *NewsfeedServerRequest) String() string { return proto.CompactTextString(m) }
func (*NewsfeedServerRequest) ProtoMessage()    {}
func (*NewsfeedServerRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d722b1f49019b149, []int{1}
}

func (m *NewsfeedServerRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewsfeedServerRequest.Unmarshal(m, b)
}
func (m *NewsfeedServerRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewsfeedServerRequest.Marshal(b, m, deterministic)
}
func (m *NewsfeedServerRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewsfeedServerRequest.Merge(m, src)
}
func (m *NewsfeedServerRequest) XXX_Size() int {
	return xxx_messageInfo_NewsfeedServerRequest.Size(m)
}
func (m *NewsfeedServerRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewsfeedServerRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewsfeedServerRequest proto.InternalMessageInfo

func (m *NewsfeedServerRequest) GetUser() *User {
	if m != nil {
		return m.User
	}
	return nil
}

type NewsfeedServerResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewsfeedServerResponse) Reset()         { *m = NewsfeedServerResponse{} }
func (m *NewsfeedServerResponse) String() string { return proto.CompactTextString(m) }
func (*NewsfeedServerResponse) ProtoMessage()    {}
func (*NewsfeedServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d722b1f49019b149, []int{2}
}

func (m *NewsfeedServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewsfeedServerResponse.Unmarshal(m, b)
}
func (m *NewsfeedServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewsfeedServerResponse.Marshal(b, m, deterministic)
}
func (m *NewsfeedServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewsfeedServerResponse.Merge(m, src)
}
func (m *NewsfeedServerResponse) XXX_Size() int {
	return xxx_messageInfo_NewsfeedServerResponse.Size(m)
}
func (m *NewsfeedServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewsfeedServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewsfeedServerResponse proto.InternalMessageInfo

func (m *NewsfeedServerResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*User)(nil), "newsfeed.User")
	proto.RegisterType((*NewsfeedServerRequest)(nil), "newsfeed.NewsfeedServerRequest")
	proto.RegisterType((*NewsfeedServerResponse)(nil), "newsfeed.NewsfeedServerResponse")
}

func init() { proto.RegisterFile("newsfeedpb/newsfeed.proto", fileDescriptor_d722b1f49019b149) }

var fileDescriptor_d722b1f49019b149 = []byte{
	// 190 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xcc, 0x4b, 0x2d, 0x2f,
	0x4e, 0x4b, 0x4d, 0x4d, 0x29, 0x48, 0xd2, 0x87, 0x31, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85,
	0x38, 0x60, 0x7c, 0x25, 0x79, 0x2e, 0x96, 0xd0, 0xe2, 0xd4, 0x22, 0x21, 0x71, 0x2e, 0xf6, 0xd2,
	0xe2, 0xd4, 0xa2, 0xf8, 0xcc, 0x14, 0x09, 0x46, 0x05, 0x46, 0x0d, 0xe6, 0x20, 0x36, 0x10, 0xd7,
	0x33, 0x45, 0xc9, 0x9a, 0x4b, 0xd4, 0x0f, 0xaa, 0x38, 0x38, 0xb5, 0xa8, 0x2c, 0xb5, 0x28, 0x28,
	0xb5, 0xb0, 0x34, 0xb5, 0xb8, 0x44, 0x48, 0x89, 0x8b, 0x05, 0xa4, 0x04, 0xac, 0x9c, 0xdb, 0x88,
	0x4f, 0x0f, 0x6e, 0x05, 0xc8, 0xbc, 0x20, 0xb0, 0x9c, 0x92, 0x01, 0x97, 0x18, 0xba, 0xe6, 0xe2,
	0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x21, 0x31, 0x2e, 0xb6, 0xa2, 0xd4, 0xe2, 0xd2, 0x9c, 0x12, 0xb0,
	0x7e, 0xce, 0x20, 0x28, 0xcf, 0x28, 0x8b, 0x8b, 0x1f, 0x59, 0x47, 0x66, 0x72, 0xaa, 0x50, 0x38,
	0x17, 0x1f, 0xaa, 0x21, 0x42, 0xf2, 0x08, 0xcb, 0xb0, 0xba, 0x4d, 0x4a, 0x01, 0xb7, 0x02, 0x88,
	0xfd, 0x4a, 0x0c, 0x06, 0x8c, 0x4e, 0x3c, 0x51, 0x5c, 0x88, 0x20, 0x4a, 0x62, 0x03, 0x07, 0x8d,
	0x31, 0x20, 0x00, 0x00, 0xff, 0xff, 0xef, 0x03, 0x0c, 0xb6, 0x37, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NewsfeedServiceClient is the client API for NewsfeedService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NewsfeedServiceClient interface {
	// Server Streaming
	NewsfeedServer(ctx context.Context, in *NewsfeedServerRequest, opts ...grpc.CallOption) (NewsfeedService_NewsfeedServerClient, error)
}

type newsfeedServiceClient struct {
	cc *grpc.ClientConn
}

func NewNewsfeedServiceClient(cc *grpc.ClientConn) NewsfeedServiceClient {
	return &newsfeedServiceClient{cc}
}

func (c *newsfeedServiceClient) NewsfeedServer(ctx context.Context, in *NewsfeedServerRequest, opts ...grpc.CallOption) (NewsfeedService_NewsfeedServerClient, error) {
	stream, err := c.cc.NewStream(ctx, &_NewsfeedService_serviceDesc.Streams[0], "/newsfeed.NewsfeedService/NewsfeedServer", opts...)
	if err != nil {
		return nil, err
	}
	x := &newsfeedServiceNewsfeedServerClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type NewsfeedService_NewsfeedServerClient interface {
	Recv() (*NewsfeedServerResponse, error)
	grpc.ClientStream
}

type newsfeedServiceNewsfeedServerClient struct {
	grpc.ClientStream
}

func (x *newsfeedServiceNewsfeedServerClient) Recv() (*NewsfeedServerResponse, error) {
	m := new(NewsfeedServerResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// NewsfeedServiceServer is the server API for NewsfeedService service.
type NewsfeedServiceServer interface {
	// Server Streaming
	NewsfeedServer(*NewsfeedServerRequest, NewsfeedService_NewsfeedServerServer) error
}

// UnimplementedNewsfeedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNewsfeedServiceServer struct {
}

func (*UnimplementedNewsfeedServiceServer) NewsfeedServer(req *NewsfeedServerRequest, srv NewsfeedService_NewsfeedServerServer) error {
	return status.Errorf(codes.Unimplemented, "method NewsfeedServer not implemented")
}

func RegisterNewsfeedServiceServer(s *grpc.Server, srv NewsfeedServiceServer) {
	s.RegisterService(&_NewsfeedService_serviceDesc, srv)
}

func _NewsfeedService_NewsfeedServer_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(NewsfeedServerRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(NewsfeedServiceServer).NewsfeedServer(m, &newsfeedServiceNewsfeedServerServer{stream})
}

type NewsfeedService_NewsfeedServerServer interface {
	Send(*NewsfeedServerResponse) error
	grpc.ServerStream
}

type newsfeedServiceNewsfeedServerServer struct {
	grpc.ServerStream
}

func (x *newsfeedServiceNewsfeedServerServer) Send(m *NewsfeedServerResponse) error {
	return x.ServerStream.SendMsg(m)
}

var _NewsfeedService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "newsfeed.NewsfeedService",
	HandlerType: (*NewsfeedServiceServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "NewsfeedServer",
			Handler:       _NewsfeedService_NewsfeedServer_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "newsfeedpb/newsfeed.proto",
}
