// Code generated by protoc-gen-go. DO NOT EDIT.
// source: newsfeedpb/newsfeed.proto

package newsfeedpb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Newsfeed struct {
	Text                 string   `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`
	Author               string   `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Newsfeed) Reset()         { *m = Newsfeed{} }
func (m *Newsfeed) String() string { return proto.CompactTextString(m) }
func (*Newsfeed) ProtoMessage()    {}
func (*Newsfeed) Descriptor() ([]byte, []int) {
	return fileDescriptor_d722b1f49019b149, []int{0}
}

func (m *Newsfeed) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Newsfeed.Unmarshal(m, b)
}
func (m *Newsfeed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Newsfeed.Marshal(b, m, deterministic)
}
func (m *Newsfeed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Newsfeed.Merge(m, src)
}
func (m *Newsfeed) XXX_Size() int {
	return xxx_messageInfo_Newsfeed.Size(m)
}
func (m *Newsfeed) XXX_DiscardUnknown() {
	xxx_messageInfo_Newsfeed.DiscardUnknown(m)
}

var xxx_messageInfo_Newsfeed proto.InternalMessageInfo

func (m *Newsfeed) GetText() string {
	if m != nil {
		return m.Text
	}
	return ""
}

func (m *Newsfeed) GetAuthor() string {
	if m != nil {
		return m.Author
	}
	return ""
}

type NewsfeedDeadlineRequest struct {
	Newsfeed             *Newsfeed `protobuf:"bytes,1,opt,name=newsfeed,proto3" json:"newsfeed,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *NewsfeedDeadlineRequest) Reset()         { *m = NewsfeedDeadlineRequest{} }
func (m *NewsfeedDeadlineRequest) String() string { return proto.CompactTextString(m) }
func (*NewsfeedDeadlineRequest) ProtoMessage()    {}
func (*NewsfeedDeadlineRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_d722b1f49019b149, []int{1}
}

func (m *NewsfeedDeadlineRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewsfeedDeadlineRequest.Unmarshal(m, b)
}
func (m *NewsfeedDeadlineRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewsfeedDeadlineRequest.Marshal(b, m, deterministic)
}
func (m *NewsfeedDeadlineRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewsfeedDeadlineRequest.Merge(m, src)
}
func (m *NewsfeedDeadlineRequest) XXX_Size() int {
	return xxx_messageInfo_NewsfeedDeadlineRequest.Size(m)
}
func (m *NewsfeedDeadlineRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_NewsfeedDeadlineRequest.DiscardUnknown(m)
}

var xxx_messageInfo_NewsfeedDeadlineRequest proto.InternalMessageInfo

func (m *NewsfeedDeadlineRequest) GetNewsfeed() *Newsfeed {
	if m != nil {
		return m.Newsfeed
	}
	return nil
}

type NewsfeedDeadlineResponse struct {
	Result               string   `protobuf:"bytes,1,opt,name=result,proto3" json:"result,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *NewsfeedDeadlineResponse) Reset()         { *m = NewsfeedDeadlineResponse{} }
func (m *NewsfeedDeadlineResponse) String() string { return proto.CompactTextString(m) }
func (*NewsfeedDeadlineResponse) ProtoMessage()    {}
func (*NewsfeedDeadlineResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_d722b1f49019b149, []int{2}
}

func (m *NewsfeedDeadlineResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_NewsfeedDeadlineResponse.Unmarshal(m, b)
}
func (m *NewsfeedDeadlineResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_NewsfeedDeadlineResponse.Marshal(b, m, deterministic)
}
func (m *NewsfeedDeadlineResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_NewsfeedDeadlineResponse.Merge(m, src)
}
func (m *NewsfeedDeadlineResponse) XXX_Size() int {
	return xxx_messageInfo_NewsfeedDeadlineResponse.Size(m)
}
func (m *NewsfeedDeadlineResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_NewsfeedDeadlineResponse.DiscardUnknown(m)
}

var xxx_messageInfo_NewsfeedDeadlineResponse proto.InternalMessageInfo

func (m *NewsfeedDeadlineResponse) GetResult() string {
	if m != nil {
		return m.Result
	}
	return ""
}

func init() {
	proto.RegisterType((*Newsfeed)(nil), "newsfeed.Newsfeed")
	proto.RegisterType((*NewsfeedDeadlineRequest)(nil), "newsfeed.NewsfeedDeadlineRequest")
	proto.RegisterType((*NewsfeedDeadlineResponse)(nil), "newsfeed.NewsfeedDeadlineResponse")
}

func init() { proto.RegisterFile("newsfeedpb/newsfeed.proto", fileDescriptor_d722b1f49019b149) }

var fileDescriptor_d722b1f49019b149 = []byte{
	// 196 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xcc, 0x4b, 0x2d, 0x2f,
	0x4e, 0x4b, 0x4d, 0x4d, 0x29, 0x48, 0xd2, 0x87, 0x31, 0xf5, 0x0a, 0x8a, 0xf2, 0x4b, 0xf2, 0x85,
	0x38, 0x60, 0x7c, 0x25, 0x33, 0x2e, 0x0e, 0x3f, 0x28, 0x5b, 0x48, 0x88, 0x8b, 0xa5, 0x24, 0xb5,
	0xa2, 0x44, 0x82, 0x51, 0x81, 0x51, 0x83, 0x33, 0x08, 0xcc, 0x16, 0x12, 0xe3, 0x62, 0x4b, 0x2c,
	0x2d, 0xc9, 0xc8, 0x2f, 0x92, 0x60, 0x02, 0x8b, 0x42, 0x79, 0x4a, 0x9e, 0x5c, 0xe2, 0x30, 0x7d,
	0x2e, 0xa9, 0x89, 0x29, 0x39, 0x99, 0x79, 0xa9, 0x41, 0xa9, 0x85, 0xa5, 0xa9, 0xc5, 0x25, 0x42,
	0x7a, 0x5c, 0x70, 0xe3, 0xc1, 0x46, 0x71, 0x1b, 0x09, 0xe9, 0xc1, 0xed, 0x87, 0x69, 0x0a, 0x42,
	0x38, 0xc1, 0x88, 0x4b, 0x02, 0xd3, 0xa8, 0xe2, 0x82, 0xfc, 0xbc, 0xe2, 0x54, 0x90, 0xf5, 0x45,
	0xa9, 0xc5, 0xa5, 0x39, 0x30, 0x47, 0x41, 0x79, 0x46, 0x79, 0x5c, 0xfc, 0x30, 0x3d, 0xc1, 0xa9,
	0x45, 0x65, 0x99, 0xc9, 0xa9, 0x42, 0xd1, 0x5c, 0x02, 0xe8, 0xc6, 0x08, 0x29, 0x62, 0x5a, 0x8c,
	0xe6, 0x5a, 0x29, 0x25, 0x7c, 0x4a, 0x20, 0xae, 0x50, 0x62, 0x70, 0xe2, 0x89, 0xe2, 0x42, 0x84,
	0x66, 0x12, 0x1b, 0x38, 0x14, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0xc4, 0xfd, 0xe0, 0x01,
	0x62, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NewsfeedServiceClient is the client API for NewsfeedService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NewsfeedServiceClient interface {
	// Unary
	NewsfeedDeadline(ctx context.Context, in *NewsfeedDeadlineRequest, opts ...grpc.CallOption) (*NewsfeedDeadlineResponse, error)
}

type newsfeedServiceClient struct {
	cc *grpc.ClientConn
}

func NewNewsfeedServiceClient(cc *grpc.ClientConn) NewsfeedServiceClient {
	return &newsfeedServiceClient{cc}
}

func (c *newsfeedServiceClient) NewsfeedDeadline(ctx context.Context, in *NewsfeedDeadlineRequest, opts ...grpc.CallOption) (*NewsfeedDeadlineResponse, error) {
	out := new(NewsfeedDeadlineResponse)
	err := c.cc.Invoke(ctx, "/newsfeed.NewsfeedService/NewsfeedDeadline", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NewsfeedServiceServer is the server API for NewsfeedService service.
type NewsfeedServiceServer interface {
	// Unary
	NewsfeedDeadline(context.Context, *NewsfeedDeadlineRequest) (*NewsfeedDeadlineResponse, error)
}

// UnimplementedNewsfeedServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNewsfeedServiceServer struct {
}

func (*UnimplementedNewsfeedServiceServer) NewsfeedDeadline(ctx context.Context, req *NewsfeedDeadlineRequest) (*NewsfeedDeadlineResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method NewsfeedDeadline not implemented")
}

func RegisterNewsfeedServiceServer(s *grpc.Server, srv NewsfeedServiceServer) {
	s.RegisterService(&_NewsfeedService_serviceDesc, srv)
}

func _NewsfeedService_NewsfeedDeadline_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(NewsfeedDeadlineRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NewsfeedServiceServer).NewsfeedDeadline(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/newsfeed.NewsfeedService/NewsfeedDeadline",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NewsfeedServiceServer).NewsfeedDeadline(ctx, req.(*NewsfeedDeadlineRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NewsfeedService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "newsfeed.NewsfeedService",
	HandlerType: (*NewsfeedServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "NewsfeedDeadline",
			Handler:    _NewsfeedService_NewsfeedDeadline_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "newsfeedpb/newsfeed.proto",
}
